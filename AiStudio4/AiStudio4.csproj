<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0-windows</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UseWPF>true</UseWPF>
    <ApplicationIcon>Icon\icon.ico</ApplicationIcon>
    <Configurations>Debug;Release;TestingProfile</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'TestingProfile'">
    <StartArguments>--testing-profile</StartArguments>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
  </PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Google.Apis.Auth" Version="1.69.0" />
		<PackageReference Include="Google.Apis.Core" Version="1.69.0" />
		<PackageReference Include="Google.Apis.Drive.v3" Version="1.69.0.3783" />
		<PackageReference Include="Ignore" Version="0.2.1" />
		<PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="9.0.4" />
		<FrameworkReference Include="Microsoft.AspNetCore.App" />
		<PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="4.13.0" />
		<PackageReference Include="Microsoft.Data.SqlClient" Version="6.0.2" />
		<PackageReference Include="ModelContextProtocol" Version="0.3.0-preview.3" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="9.0.7" />
		<PackageReference Include="ModelContextProtocol.AspNetCore" Version="0.3.0-preview.3" />
		<PackageReference Include="OpenAI" Version="2.2.0-beta.4" />
	</ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="9.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="9.0.4" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="9.0.4" />
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.3240.44" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SharedClasses\SharedClasses.csproj" />
  </ItemGroup>


	<ItemGroup>
		<EmbeddedResource Include="..\AiStudioClient\dist\**\*.*">
			<LogicalName>AiStudioClientviewResources.%(RecursiveDir)%(Filename)%(Extension)</LogicalName>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<None Update="AiStudioClient\dist\**\*.*">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>

		</None>

	</ItemGroup>

	<ItemGroup>
		<TypeScriptFiles Include="AiStudioClient\src\**\*.tsx" />
		<TypeScriptFiles Include="AiStudioClient\src\**\*.ts" />
		<TypeScriptFiles Include="AiStudioClient\src\**\*.jsx" />
		<TypeScriptFiles Include="AiStudioClient\src\**\*.js" />
		<Compile Remove="AiServices\MockAiService.cs" />
		<Compile Remove="AiServices\OpenAI.cs" />
		<Content Include="@(TypeScriptFiles)">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Content>
		<Content Include="AiStudioClient\src\components\LoadingTimer.css" />
		<Content Include="Icon\icon.ico" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="AiStudioClient\dist\" />
	  <Folder Include="AiStudioClient\src\services\websocket\" />
	  <Folder Include="AiStudioClient\src\store\" />
	  <Folder Include="Core\Helpers\" />
	  <Folder Include="Licenses\" />
	  <Folder Include="ReadMeDocs\" />
	</ItemGroup>

	<ItemGroup>
	  <Reference Include="System.Windows.Forms">
	    <HintPath>..\..\..\..\..\..\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.7.2\System.Windows.Forms.dll</HintPath>
	  </Reference>
	</ItemGroup>

	<ItemGroup>
	  <None Update="app-nuget-license.txt">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Data\tips.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<Target Name="NpmBuild" BeforeTargets="BeforeBuild;PrepareForRun" Inputs="@(TypeScriptFiles)" Outputs="$(ProjectDir)AiStudioClient\dist\index.html">
		<Message Text="Running npm build..." Importance="high" />
		<Exec Command="xcopy &quot;$(ProjectDir)AiStudioClient\dist\*&quot; &quot;$(TargetDir)&quot; /E /I /Y" />
	</Target>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
	  <Exec Command="nuget-license -i $(ProjectDir)AiStudio4.csproj -o jsonPretty &gt; $(ProjectDir)app-nuget-license.txt" WorkingDirectory="$(ProjectDir)" IgnoreExitCode="true" />
	</Target>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
      <Message Text="Creating release zip for DebugWithZip configuration..." Importance="high" />
	  <Exec Command="rem powershell -Command &quot;if (Test-Path '$(ProjectDir)release.zip') { Remove-Item '$(ProjectDir)release.zip' -Force }; Compress-Archive -Path '$(TargetDir)*' -DestinationPath '$(ProjectDir)release.zip' -Force&quot;" />
	</Target>

</Project>